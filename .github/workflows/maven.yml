# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Package

on:
  workflow_dispatch:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-username: GITHUB_USER_REF  # env variable name for username
        server-password: GITHUB_TOKEN_REF # env variable name for GitHub Personal Access Token: 
        settings-path: ${{ github.workspace }}  
    - uses: s4u/maven-settings-action@v2.3.0
      with:
        servers: |
         [{
          "id": "core",
          "username": "${{ secrets.DPHE_ROBOT_USERNAME }}",
          "password": "${{ secrets.DPHE_ROBOT_PASSWORD }}"
          },
          {
          "id": "onto-db",
          "username": "${{ secrets.DPHE_ROBOT_USERNAME }}",
          "password": "${{ secrets.DPHE_ROBOT_PASSWORD }}"
          }]  
    - name: Build with Maven
      run: mvn -B package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_USER_REF: ${{ secrets.DPHE_ROBOT_USERNAME }}
        GITHUB_TOKEN_REF: ${{ secrets.DPHE_ROBOT_ACCESS_TOKEN }}

        
        
     
#  build-mac:

#    runs-on: macos-latest

#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
#    - name: Build with Maven
#      run: mvn -B test --file pom.xml
#  build-windows:
#    runs-on: windows-latest

#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
#    - name: Build with Maven
#      run: mvn -B test --file pom.xml
